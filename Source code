import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Load the CSV file
df = pd.read_csv("AAPL_data.csv")  # Replace with your filename if different

# Check the data
print("Initial Data:\n", df.head())

# Convert 'date' column to datetime and set it as index
df['date'] = pd.to_datetime(df['date'])
df.set_index('date', inplace=True)
df.sort_index(inplace=True)

# Rename columns to lowercase for consistency (optional)
df.rename(columns=lambda x: x.lower(), inplace=True)

# Add Technical Indicators
df['daily_return'] = df['close'].pct_change()
df['20_ma'] = df['close'].rolling(window=20).mean()
df['50_ma'] = df['close'].rolling(window=50).mean()
df['target'] = df['close'].shift(-1)
df.dropna(inplace=True)

# Plot Close Price with Moving Averages
plt.figure(figsize=(14,6))
plt.plot(df['close'], label='Close Price')
plt.plot(df['20_ma'], label='20-day MA')
plt.plot(df['50_ma'], label='50-day MA')
plt.title("AAPL Stock Price with Moving Averages")
plt.legend()
plt.show()

# Daily Return Histogram
plt.figure(figsize=(10,5))
sns.histplot(df['daily_return'], bins=100, kde=True)
plt.title("AAPL Daily Return Distribution")
plt.show()

# Prepare for ML - Features and Target
X = df[['open', 'high', 'low', 'close', 'volume']]
y = df['target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

predictions = model.predict(X_test)
rmse = np.sqrt(mean_squared_error(y_test, predictions))

print(f"\nâœ… Linear Regression RMSE: {rmse:.2f}")
